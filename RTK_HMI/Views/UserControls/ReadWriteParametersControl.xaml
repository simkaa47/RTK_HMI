<UserControl x:Class="RTK_HMI.Views.UserControls.ReadWriteParametersControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RTK_HMI.Views.UserControls"
             xmlns:uc="clr-namespace:RTK_HMI.Views.UserControls"
             xmlns:data="clr-namespace:DataAccess.Models;assembly=DataAccess"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:vm="clr-namespace:RTK_HMI.ViewModels"
             xmlns:m="clr-namespace:DataAccess.Models;assembly=DataAccess"
             xmlns:v="clr-namespace:RTK_HMI.Views"
              xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
             mc:Ignorable="d"              
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <v:BindingProxy  x:Key="AdminVisibility" Data="{Binding UserVm.CurrentUser}"/>
            <ObjectDataProvider x:Key="DataTypes"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="data:DataType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridCommon}" x:Key="ParametersRowStyle">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding VisibleForAdmin}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.UserVm.CurrentUser.Level}" Value="{x:Static m:UserLevel.Admin}"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="3*"/>
            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="50" Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Height="50" Orientation="Horizontal" Visibility="{Binding UserVm.IsAuthorized, Converter={StaticResource VisibleIfEqual}, ConverterParameter=True}">
            <!--#region Загрузить из РТК -->
            <Button Command="{Binding ConnectVM.ReadAllParamsCommand}">
                <fa:ImageAwesome Icon="Download"/>
                <Button.ToolTip>
                    <TextBlock Text="Выгрузить из РТК"/>
                </Button.ToolTip>
            </Button>
            <!--#endregion-->
            <!--#region Сохранить набор -->
            <Button Command="{Binding SaveLoadVM.SaveCommand}">
                <fa:ImageAwesome Icon="Save"/>
                <Button.ToolTip>
                    <TextBlock Text="Сохранить"/>
                </Button.ToolTip>
            </Button>
            <!--#endregion-->
            <!--#region Записать все параметры  в память -->
            <Button Command="{Binding ConnectVM.WriteAllCommand}">
                <fa:ImageAwesome Icon="Upload"/>
                <Button.ToolTip>
                    <TextBlock Text="Загрузить в РТК"/>
                </Button.ToolTip>
            </Button>
            <!--#endregion-->
            <!--#region Редактировать параметр -->
            <Button Command="{Binding SaveLoadVM.EditCommand}">
                <fa:ImageAwesome Icon="Edit"/>
                <Button.ToolTip>
                    <TextBlock Text="Редактировать параметр"/>
                </Button.ToolTip>
            </Button>
            <!--#endregion-->
            <!--#region Удалить параметр -->
            <Button Command="{Binding SaveLoadVM.DeleteCommand}">
                <fa:ImageAwesome Icon="Remove"/>
                <Button.ToolTip>
                    <TextBlock Text="Удалить параметр"/>
                </Button.ToolTip>
            </Button>
            <!--#endregion-->
            <!--#region Добавить параметр -->
            <Button Command="{Binding SaveLoadVM.AddCommand}" Visibility="{Binding UserVm.IsAuthorized, Converter={StaticResource VisibleIfEqual}, ConverterParameter=True}">
                <fa:ImageAwesome Icon="PlusCircle"/>
                <Button.ToolTip>
                    <TextBlock Text="Добавить параметр"/>
                </Button.ToolTip>
            </Button>
            <!--#endregion-->
        </StackPanel>
        <Grid Grid.Column="2" Grid.Row="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="0.5*"/>
            </Grid.RowDefinitions>
            <!--#region Панель крупных индикаторов -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <uc:BigIndicator DataContext="{Binding ParameterVm.Parameters[0]}"/>
                <uc:BigIndicator Grid.Column="1" DataContext="{Binding ParameterVm.Parameters[1]}"/>
            </Grid>
             <!--#endregion-->
                <!--#region СОхраненные наборы -->
            <uc:SaveLoadJsonControl DataContext="{Binding SaveLoadVM}" Grid.Row="1"/>
            <!--#endregion-->
        </Grid>
        <!--#region Параметры -->
        <DataGrid ItemsSource="{Binding ParameterVm.Parameters}"
                  AutoGenerateColumns="False"
                  Grid.Row="1"
                  RowStyle="{StaticResource ParametersRowStyle}"
                  FontSize="14"
                  IsReadOnly="{Binding UserVm.CurrentUser, Converter={StaticResource UserToBoolInverseConverter}, ConverterParameter={x:Static m:UserLevel.Service}}"
                  SelectedItem="{Binding ConnectVM.SelectedParameter}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False">
            <DataGrid.Resources>
                <DataTemplate x:Key="HeaderTemplate">
                    <TextBlock TextWrapping="Wrap">
                        <TextBlock.Text>
                            <Binding/>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn  IsReadOnly="True" Header="Название" Binding="{Binding Description}"/>
                <DataGridTemplateColumn Header="Значение" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="200"
                                     IsReadOnly="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.UserVm.CurrentUser, Converter={StaticResource UserToBoolInverseConverter}, ConverterParameter={x:Static m:UserLevel.Service}}">
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Примечание">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Notification, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="200"
                                     IsReadOnly="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.UserVm.CurrentUser, Converter={StaticResource UserToBoolInverseConverter}, ConverterParameter={x:Static m:UserLevel.Service}}">
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Service}, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Visibility="{Binding RegType, Converter={StaticResource VisibleIfEqual}, ConverterParameter=Holding}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ConnectVM.WriteParameterCommand}">
                                <fa:ImageAwesome Icon="Upload" Height="20" Width="20"/>
                                <Button.ToolTip>
                                    <TextBlock Text="Записать параметр"/>
                                </Button.ToolTip>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#region Data type -->
                <DataGridTextColumn Header="Тип данных"  Binding="{Binding Type}" 
                                    Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Admin}, UpdateSourceTrigger=PropertyChanged}"/>
                <!--#endregion-->
                <!--#region № reg -->
                <DataGridTextColumn Header="№ регистра" IsReadOnly="True" Binding="{Binding RegNum}"
                                    Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Admin}, UpdateSourceTrigger=PropertyChanged}"/>
                <!--#endregion-->
                <!--#region Cyclic requestes -->
                <DataGridCheckBoxColumn  Width="110" Header="Циклический опрос" IsReadOnly="True" Binding="{Binding IsCyclic}"
                                         Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Admin}, UpdateSourceTrigger=PropertyChanged}"/>
                <!--#endregion-->
                <!--#region Reg type -->
                <DataGridTextColumn Header="Тип регистра" IsReadOnly="True" Binding="{Binding RegType}"
                                    Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Admin}, UpdateSourceTrigger=PropertyChanged}"/>
                <!--#endregion-->
                <!--#region Byte order -->
                <DataGridTextColumn  Width="60" Header="Порядок байт" IsReadOnly="True" Binding="{Binding Order}" 
                                    Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Admin}, UpdateSourceTrigger=PropertyChanged}"/>
                <!--#endregion-->
                <!--#region Visible for admin -->
                <DataGridCheckBoxColumn Header="Только для админа" Binding="{Binding VisibleForAdmin}"
                                        Visibility="{Binding Source={StaticResource AdminVisibility}, Path=Data, Mode=TwoWay, Converter={StaticResource UserToVisibilityConverter}, ConverterParameter={x:Static m:UserLevel.Admin}, UpdateSourceTrigger=PropertyChanged}"/>
                <!--#endregion-->
            </DataGrid.Columns>
        </DataGrid>
        <!--#endregion-->
        <GridSplitter Grid.Column="1" Width="10" Background="#262626" BorderBrush="Aqua" BorderThickness="1" Grid.RowSpan="2"  VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
        
    </Grid>
</UserControl>
